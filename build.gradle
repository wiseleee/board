plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.1'
	id 'io.spring.dependency-management' version '1.0.12.RELEASE'
	id 'com.google.cloud.tools.jib' version '3.1.4'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.insight'
version = 'ver1.0'

java.sourceCompatibility = JavaVersion.VERSION_11

final def var = jar {
	enabled = false
}
var



configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.0.0'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation group: 'org.bgee.log4jdbc-log4j2', name: 'log4jdbc-log4j2-jdbc4.1', version: '1.16'
	implementation group: 'commons-io', name: 'commons-io', version: '2.6'
	implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.3.3'
	testImplementation 'junit:junit:4.13.1'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

jib {
  from {
    image = 'adoptopenjdk/openjdk11:alpine-jre'
  }

  container {
    entrypoint = ['java', '-Dspring.profiles.active=test', '-jar', 'board-ver1.0.jar']

    jvmFlags = ['-Xms512m', '-Xmx512m', '-Xdebug', '-XshowSettings:vm', '-XX:+UnlockExperimentalVMOptions', '-XX:+UseContainerSupport']
		ports = ['8080']

    environment = [SPRING_OUTPUT_ANSI_ENABLED: "ALWAYS"]
    labels = [version:project.version, name:project.name, group:project.group]

    creationTime = 'USE_CURRENT_TIMESTAMP'
    format = 'Docker'
  }
  extraDirectories {
    paths {
      path {
        from = file('build/libs')
      }
    }
  }
}

